#!/usr/bin/env perl

use strict;
use Getopt::Long;

my ($optReverse, $optModhex, $optNewline, $optStrip, $optHelp);
Getopt::Long::Configure ("bundling");
GetOptions ('r'    => \$optReverse,
            'm'    => \$optModhex,
            'n'    => \$optNewline,
            's'    => \$optStrip,
            'help' => \$optHelp) or usage();
usage() if $optHelp;

$/ = undef;

my $data = <>;
chop $data if $optStrip;

if ($optReverse) {
    my $input = $data;
    if ($optModhex) {
        $input =~ tr/cbdefghijklnrtuv/0123456789abcdef/;
    }
    print pack('H*', $input);
} else {
    my $output = unpack('H*', $data);
    if ($optModhex) {
        $output =~ tr/0123456789abcdef/cbdefghijklnrtuv/;
    }
    print $output;
}

print "\n" if $optNewline;
exit 0;

sub usage {
    my $bname = substr($0, rindex($0, "/") + 1);
    print STDERR "$bname [-nmrs] file|stdin\n";
    print STDERR "  -n  output a trailing newline\n";
    print STDERR "  -m  i/o in ModHex (mapping: cbdefghijklnrtuv => 0123456789abcdef)\n";
    print STDERR "  -r  input is hex, output decoded characters\n";
    print STDERR "  -s  strip trailing byte on input data\n";
    exit 1;
}
