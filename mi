#!/usr/bin/env perl
#
# Music Info
#
# Utility to extract tag information from various music file formats or
# display a pretty-printed album style summary from a set of files
#
# Currently recognized formats mp3, m4a, ogg, flac, wma
#
# Requirements: CPAN module Audio::Scan

use strict;
use Audio::Scan;
use Getopt::Long qw(:config auto_abbrev);
use open qw/:std :encoding(UTF-8)/;
use feature 'unicode_strings';

my ($optSummary, $optHelp);
GetOptions('summary' => \$optSummary,
           'help'    => \$optHelp) or usage();
usage() if $optHelp;

# Skip embedded artwork
$ENV{AUDIO_SCAN_NO_ARTWORK} = 1;

my (@songInfo, $artist, $album, $year, $maxTitleLen, $totalSeconds, $maxMin);
my $musicFileRE = qr/\.(?:mp3|m4a|ogg|flac|wma)$/;

foreach my $arg (@ARGV) {
    next if (-f $arg && $arg !~ /$musicFileRE/);
    my @files;
    if (-d $arg) {
        opendir(my $dh, $arg) or die "Can't opendir $arg: $!";
        @files = map { $arg . '/' . $_ } grep { /$musicFileRE/ } readdir($dh);
        closedir($dh);
    } else {
        push (@files, $arg);
    }

    foreach my $mfile (sort @files) {
        my $musicFile = getSongInfo($mfile);
        if ($optSummary) {
            push(@songInfo, $musicFile);
            $artist = $musicFile->{'artist'} unless $artist;
            $album = $musicFile->{'album'} unless $album;
            $year = $musicFile->{'year'} unless $year;
            $maxTitleLen = length($musicFile->{'title'}) if length($musicFile->{'title'}) > $maxTitleLen;
            (my $tm = $musicFile->{'time'}) =~ s/^0//;
            $totalSeconds += 60*(split(/:/,$tm))[0] + (split(/:/,$tm))[1];
            (my $min = $musicFile->{'time'}) =~ s/:.*//;
            $maxMin = $min if $min > $maxMin;
        } else {
            $musicFile->{'time'} =~ s/^0//;
            print "title:    ", $musicFile->{'title'},    "\n"  if $musicFile->{'title'};
            print "artist:   ", $musicFile->{'artist'},   "\n"  if $musicFile->{'artist'};
            print "album:    ", $musicFile->{'album'},    "\n"  if $musicFile->{'album'};
            print "genre:    ", $musicFile->{'genre'},    "\n"  if $musicFile->{'genre'};
            print "year:     ", $musicFile->{'year'},     "\n"  if $musicFile->{'year'};
            print "track:    ", $musicFile->{'tracknum'}, "\n"  if $musicFile->{'tracknum'};
            print "time:     ", $musicFile->{'time'},     "\n"  if $musicFile->{'time'};
            print "vbr:      ", $musicFile->{'vbr'},      "\n"  if $musicFile->{'vbr'};
            print "encoder:  ", $musicFile->{'encoder'},  "\n"  if $musicFile->{'encoder'};
            print "version:  ", $musicFile->{'version'},  "\n"  if $musicFile->{'version'};
            print "bitrate:  ", $musicFile->{'bitrate'},  "\n"  if $musicFile->{'bitrate'};
            print "apid:     ", $musicFile->{'apid'},     "\n"  if $musicFile->{'apid'};
            print "comment:  ", $musicFile->{'comment'},  "\n"  if $musicFile->{'comment'};
            print "\n";
        }
    }
}

if ($optSummary && @songInfo > 0) {
    #
    # Calculate overall width to center title within.
    # Width = track # + maxTitleLen + " ... " + time
    #
    my $fieldLen = length("00. ") + $maxTitleLen + length(" ... ") + length("00:00");
    print ' ' x (($fieldLen - length($artist)) / 2), "$artist\n";
    print ' ' x (($fieldLen - length("$album ($year)")) / 2), "$album ($year)\n";

    my $playingTime = "Playing Time: " . int($totalSeconds/60) . ':' . sprintf("%02d",$totalSeconds%60);
    print ' ' x (($fieldLen - length($playingTime)) / 2), "$playingTime\n\n";

    foreach my $musicFile (@songInfo) {
        my $song = $musicFile->{'title'} . ' ' . '.' x ($maxTitleLen - length($musicFile->{'title'})) . '...';
        my $tm = $musicFile->{'time'};
        if ($maxMin < 10) {
            $tm =~ s/^0(\d)/$1/;
        } else {
            $tm =~ s/^0/ /;
        }
        printf("%2d. %s %s %s\n", $musicFile->{'tracknum'}, $song, $tm);
    }
}


sub getSongInfo {
    my $file = shift;
    my $musicFile;
    my $scan = Audio::Scan->scan($file);
    my $tags = $scan->{'tags'};
    my $info = $scan->{'info'};

    if (exists $info->{'song_length_ms'}) {
        my $sec = $info->{'song_length_ms'} / 1000;
        $musicFile->{'time'} = sprintf("%02d:%02d", $sec / 60, $sec % 60);
    }

    if ($file =~ /\.mp3$/) {
        $musicFile->{'type'}     = 'mp3';
        $musicFile->{'artist'}   = $tags->{'TPE1'} if (exists $tags->{'TPE1'});
        $musicFile->{'album'}    = $tags->{'TALB'} if (exists $tags->{'TALB'});
        $musicFile->{'title'}    = $tags->{'TIT2'} if (exists $tags->{'TIT2'});
        $musicFile->{'genre'}    = $tags->{'TCON'} if (exists $tags->{'TCON'});
        $musicFile->{'year'}     = $tags->{'TDRC'} if (exists $tags->{'TDRC'});
        $musicFile->{'tracknum'} = $tags->{'TRCK'} if (exists $tags->{'TRCK'});
        if (exists $tags->{'TENC'}) {
            $musicFile->{'encoder'}  = $tags->{'TENC'};
        } elsif (exists $info->{'lame_encoder_version'}) {
            $musicFile->{'encoder'}  = $info->{'lame_encoder_version'};
        }
        $musicFile->{'version'}  = $info->{'id3_version'} if (exists $info->{'id3_version'});
        $musicFile->{'bitrate'}  = int($info->{'bitrate'} / 1000) if (exists $info->{'bitrate'});
        $musicFile->{'vbr'}      = (exists $info->{'vbr'} && $info->{'vbr'} == 1) ? "yes" : "no";
        $musicFile->{'comment'}  = join(" " , map { @$_ } @{$tags->{'COMM'}}) if (exists $tags->{'COMM'});
    } elsif ($file =~ /\.m4a$/) {
        $musicFile->{'type'}     = 'm4a';
        $musicFile->{'artist'}   = $tags->{'ART'}  if (exists $tags->{'ART'});
        $musicFile->{'album'}    = $tags->{'ALB'}  if (exists $tags->{'ALB'});
        $musicFile->{'title'}    = $tags->{'NAM'}  if (exists $tags->{'NAM'});
        if (exists $tags->{'DAY'}) {
            ($musicFile->{'year'} = $tags->{'DAY'}) =~ s/^(\d{4}).*/$1/;
        }
        $musicFile->{'tracknum'} = $tags->{'TRKN'} if (exists $tags->{'TRKN'});
        $musicFile->{'encoder'}  = $tags->{'TOO'}  if (exists $tags->{'TOO'});
        $musicFile->{'apid'}     = $tags->{'APID'} if (exists $tags->{'APID'});
        if (exists $tags->{'GNRE'}) {
            $musicFile->{'genre'} = $tags->{'GNRE'};
        } elsif (exists $tags->{'GEN'}) {
            $musicFile->{'genre'} = $tags->{'GEN'};
        }
        if (exists $info->{'bitrate'}) {
            $musicFile->{'bitrate'} = int($info->{'bitrate'} / 1000);
        } elsif (exists $info->{'avg_bitrate'}) {
            $musicFile->{'bitrate'} = int($info->{'avg_bitrate'} / 1000);
        }
    } elsif ($file =~ /\.wma$/) {
        $musicFile->{'type'}     = 'wma';
        $musicFile->{'artist'}   = $tags->{'WM/AlbumArtist'} if (exists $tags->{'WM/AlbumArtist'});
        $musicFile->{'album'}    = $tags->{'WM/AlbumTitle'}  if (exists $tags->{'WM/AlbumTitle'});
        $musicFile->{'title'}    = $tags->{'Title'}          if (exists $tags->{'Title'});
        $musicFile->{'genre'}    = $tags->{'WM/Genre'}       if (exists $tags->{'WM/Genre'});
        $musicFile->{'year'}     = $tags->{'WM/Year'}        if (exists $tags->{'WM/Year'});
        $musicFile->{'tracknum'} = $tags->{'WM/TrackNumber'} if (exists $tags->{'WM/TrackNumber'});
        $musicFile->{'bitrate'}  = int($info->{'max_bitrate'} / 1000) if (exists $info->{'max_bitrate'});
    } elsif ($file =~ /\.ogg$/) {
        $musicFile->{'type'}     = 'ogg';
        $musicFile->{'artist'}   = $tags->{'ARTIST'}      if (exists $tags->{'ARTIST'});
        $musicFile->{'album'}    = $tags->{'ALBUM'}       if (exists $tags->{'ALBUM'});
        $musicFile->{'title'}    = $tags->{'TITLE'}       if (exists $tags->{'TITLE'});
        $musicFile->{'year'}     = $tags->{'DATE'}        if (exists $tags->{'DATE'});
        $musicFile->{'genre'}    = $tags->{'GENRE'}       if (exists $tags->{'GENRE'});
        $musicFile->{'tracknum'} = $tags->{'TRACKNUMBER'} if (exists $tags->{'TRACKNUMBER'});
        $musicFile->{'encoder'}  = $tags->{'VENDOR'}      if (exists $tags->{'VENDOR'});
        $musicFile->{'bitrate'}  = int($info->{'bitrate_average'} / 1000) if (exists $info->{'bitrate_average'});
    } elsif ($file =~ /\.flac$/) {
        $musicFile->{'type'}     = 'flac';
        $musicFile->{'artist'}   = $tags->{'ARTIST'}       if (exists $tags->{'ARTIST'});
        $musicFile->{'album'}    = $tags->{'ALBUM'}        if (exists $tags->{'ALBUM'});
        $musicFile->{'title'}    = $tags->{'TITLE'}        if (exists $tags->{'TITLE'});
        $musicFile->{'year'}     = $tags->{'DATE'}         if (exists $tags->{'DATE'});
        $musicFile->{'genre'}    = $tags->{'GENRE'}        if (exists $tags->{'GENRE'});
        $musicFile->{'encoder'}  = $tags->{'ENCODED-BY'} if (exists $tags->{'ENCODED-BY'});
        $musicFile->{'tracknum'} = $tags->{'TRACKNUMBER'}  if (exists $tags->{'TRACKNUMBER'});
        $musicFile->{'tracknum'} .= "/" . $tags->{'TRACKTOTAL'} if (exists $tags->{'TRACKTOTAL'});
        if (exists $info->{'bits_per_sample'} && exists $info->{'samplerate'}) {
            $musicFile->{'bitrate'}  = $info->{'bits_per_sample'} . " bits per sample @ " . $info->{'samplerate'} . "Hz";
        }
    }

    return $musicFile;
}


sub usage {
    my $bname = substr($0, rindex($0, "/") + 1);
    print STDERR "$bname [-summary] file1 [file2 ...]\n\n";
    print STDERR << 'EndOfUsage'
Utility to extract tag information from various music file formats or
display a pretty-printed album style summary from a set of files

Currently recognized formats mp3, m4a, ogg, flac, wma

Requirements: CPAN module Audio::Scan

Examples:
% mi '01. La Llorona.mp3'
title:    La Llorona
artist:   Tim "Too Slim" Langford
album:    Broken Halo
genre:    Blues
year:     2012
track:    01/11
time:     2:58
vbr:      yes
bitrate:  242

% mi --summary *.mp3
     Tim "Too Slim" Langford
        Broken Halo (2012)
       Playing Time: 41:23

 1. La Llorona ............. 2:58 
 2. Three Chords ........... 5:02 
 3. Shaking A Cup .......... 3:32 
 4. You Hide It Well ....... 3:05 
 5. Princeville Serenade ... 2:13 
 6. 40 Watt Bulb ........... 4:18 
 7. Broken Halo ............ 3:22 
 8. North Dakota Girl ...... 4:25 
 9. Dollar Girl ............ 5:45 
10. Long Tail Black Cat .... 3:40 
11. Gracie ................. 3:03 
EndOfUsage
}
